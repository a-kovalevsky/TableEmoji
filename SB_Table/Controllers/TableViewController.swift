//
//  TableViewController.swift
//  SB_Table
//
//  Created by andrew on 18.04.22.
//

import UIKit

class EmojiTableViewController: UITableViewController {

    var objects = [Emoji(emoji: "üòÅ", description: "Hahaha", name: "Lol", isFavourite: true),
                   Emoji(emoji: "üòÖ", description: "It was shame", name: "Shame", isFavourite: true),
                   Emoji(emoji: "üôÉ", description: "Wassup", name: "Another smile", isFavourite: true),
                   Emoji(emoji: "üò≠", description: "I',m crying", name: "Sad Smile", isFavourite: false)]
    override func viewDidLoad() {
        super.viewDidLoad()

  
        self.title = "Emoji Reader"
        self.navigationItem.leftBarButtonItem = self.editButtonItem
        
    }
    @IBAction func unwindSegue(segue:UIStoryboardSegue){
        guard segue.identifier == "saveSegue" else {return}
        let sourceNWC = segue.source as! NewTableViewController  // –∫–∞—Å—Ç–∏–º
        let emoji = sourceNWC.emoji
        if let selectedIndexPath = tableView.indexPathForSelectedRow {
            objects[selectedIndexPath.row] = emoji
            tableView.reloadRows(at: [selectedIndexPath], with: .fade)
        } else {
            
        let newIndexPath = IndexPath(row: objects.count
                                     , section: 0)
        objects.append(emoji)
      
        tableView.insertRows(at: [newIndexPath], with: .fade)
        }
    }
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        super.prepare(for: segue, sender: sender)
        guard segue.identifier == "editEmoji" else {return}
        let indexPath = tableView.indexPathForSelectedRow!
        let emoji = objects[indexPath.row]
        	
        let navigationVC = segue.destination as! UINavigationController
        let newTableVC = navigationVC.topViewController as! NewTableViewController
        newTableVC.emoji = emoji
        newTableVC.title = "Edit"
    }

    // MARK: - Table view data source

    override func numberOfSections(in tableView: UITableView) -> Int {
        // #warning Incomplete implementation, return the number of sections
        return 1
    }

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        return objects.count
    }

    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "emojiCell", for: indexPath) as! EmojiTableViewCell
        let object = objects[indexPath.row]
        cell.set(object: object)
        // Configure the cell...
        return cell
    }
    override func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCell.EditingStyle {
        //–¥–µ—Ñ–æ–ª—Ç –¥—ç–ª–∏—Ç
        return .delete
    }
    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == .delete { //–ø—Ä–∏–Ω–∏–º–∞–µ—Ç editing style
            objects.remove(at: indexPath.row)
            tableView.deleteRows(at: [indexPath] , with: .fade)//—Ñ—ç–π–¥ –µ—Ç–æ –∞–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
        }
    }
    override func tableView(_ tableView: UITableView, canMoveRowAt indexPath: IndexPath) -> Bool {
        return true
    }
    override func tableView(_ tableView: UITableView, moveRowAt sourceIndexPath: IndexPath, to destinationIndexPath: IndexPath) {
        let movedEmoji = objects.remove(at: sourceIndexPath.row)
        objects.insert(movedEmoji, at: destinationIndexPath.row)
        tableView.reloadData()
    }
    override func tableView(_ tableView: UITableView, leadingSwipeActionsConfigurationForRowAt indexPath: IndexPath) -> UISwipeActionsConfiguration? {
        //—Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –¥–ª—è –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ —é–∏ –∫–æ–Ω—Ç–µ–∫—à—É–∞–ª —ç–∫—à–∏–Ω
        let done = doneAction(at: indexPath)
        let like = favouriteAction(at: indexPath)
        return UISwipeActionsConfiguration(actions: [done,like])
    }
    func doneAction(at IndexPath: IndexPath ) -> UIContextualAction {//—Å–æ–∑–¥–∞–µ–º –ø–æ —Ñ–∞–∫—Ç—É —Ñ—É–∫–Ω—Ü–∏—é —Å –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è —ç–∫—à–Ω –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—à–µ,–¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ —Å–≤–∞–π–ø—É
        let action = UIContextualAction(style: .destructive, title: "Done") { (action,view,completion) in self.objects.remove(at: IndexPath.row)
            self.tableView.deleteRows(at: [IndexPath], with: .automatic)// –ø–æ —Å–≤–∞–π–ø—É –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –∏ —Å–æ–æ—Ç–≤–µ—Å–≤–µ–Ω–Ω–æ —É–¥–∞–ª—è–µ–º –≤ –¥–≤—É—Ö –º–µ—Å—Ç–∞—Ö –∏ –≤ —Ç—ç–π–±–ª –≤—å—é –∏ –≤ –º–∞—Å—Å–∏–≤–µ
            completion(true)//complition true –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ –∫–æ–Ω–µ—Ü –¥–µ–π—Å—Ç–≤–∏—è –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –±—É–¥–µ—Ç
        }
            action.backgroundColor = .systemOrange
            action.image = UIImage(systemName: "checkmark.circle")
            return action
    }
    func favouriteAction(at indexPath: IndexPath) -> UIContextualAction {// –ø–æ–≤—Ç–æ—Ä—è–µ–º –µ—â–µ –æ–¥–∏–Ω —ç–∫—à–Ω –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ª–∞–π–∫–∞,  –¥–µ–ª–∞–µ–º –µ—â–µ –æ–¥–Ω—É —Ñ—É–Ω–∫—Ü–∏—é
        var object = objects[indexPath.row]//—Å—Ç—É—á–∏–º—Å—è –¥–æ –æ–±—ä–µ–∫—Ç–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –ø–æ –∏–Ω–¥–µ–∫—Å –ø–∞—Ñ
        let action = UIContextualAction(style: .normal, title: "Like", handler: {(action,view,completion)  in
            object.isFavourite = !object.isFavourite //–æ–±—Ä–∞—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            self.objects[indexPath.row] = object // –ø—Ä–∏—Å–∞–∏–≤–∞–µ–º –ø–æ –∏–Ω–¥–µ–∫—Å –ø–∞—Ñ—É –ø—Ä–∏—Ö–æ–¥—è—â–µ–º—É –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ,–∫–∞–∫ —è –ø–æ–Ω—è–ª –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ –¥–ª—è —Ç—ç–π–±–ª –≤—å—é, —Ç–æ–µ—Å—Ç—å –±–µ–∑ —ç—Ç–æ–≥–æ –±—ã –º–µ–Ω—è–ª–æ—Å—å –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∏–∑ —Ñ—ç–π–≤–æ—Ä–∏—Ç , –Ω–æ –Ω–∞ —Å–∞–º–æ–º —Ç—ç–π–±–ª –≤—å—é –±—ã —ç—Ç–æ –Ω–∏–∫–∞–∫ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª–æ—Å—å
            completion(true)
        })
        action.image = UIImage(systemName: "heart")
        action.backgroundColor = object.isFavourite ? .systemGreen : .systemGray2
        /* if object.isFavourite {
            action.backgroundColor = .systemGreen
        } else {
            action.backgroundColor = .systemGray2
        }
         */
        return action
    }
}

